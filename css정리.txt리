■ CSS 사용하는 이유
	(1) 표현할 수 있는 스타일이 다양하고, 세분화 되어있다.
		- 동적인 표현까지 가능해짐
	(2) 구조와 스타일을 분리하여, 작성할 수 있다.
	
■ CSS의 다양한 정의방법 : 어디에다 작성하는가?
	(1) CSS파일 : 연결하는 모든 웹문서가 스타일을 공유
		- html안에서는 <link>태그를 사용하여 연결
		- 스타일시트안에서는 @import url("주소"); 를 사용하여 연결
	(2) <style>태그 : 해당 문서안에서 여러요소가 스타일을 공요
	(3) style속성(인라인스타일) : 해당 요소에만 스타일 적용
	
	<body text="red" bgcolor="FFCCCC">
	
■ 셀렉터(=선택자)의 기본유형(p169~p171)
   : 셀렉터란, CSS에서 대상을 구성하는 요소
   (1) 태그셀렉터 : 태그를 대상으로 스타일을 부여
   (2) 아이디셀렉터(#아이디명) : 아이디를 대상으로 스타일을 부여
		- id속성은 중복불가이다. 문서안에서 동일한 아이디값이 있으면 안됨
   (3) 클래스셀렉터(.클래스명) : 클래스를 대상으로 스타일을 부여
		- class속성은 id속성과 다르게, 중복부여가 가능하고, 여러 클래스값을 가지는 다중부여도 가능하다.
		※ 아이디명과 클래스명 부여시, 주의사항
			① 숫자로 시작하면 안되고, 숫자로만 되어있어도 안된다. 
			ex) 1a, 2e, 4g , g4
			② 띄어쓰면 안된다.(클래스의 경우 다중부여로 처리된다.) 
			ex) <div id="blue sky"> <div class="blue sky"> 
			③ 대소문자를 구분하여 셀렉터에 적용된다.
			
■ 박스의 구성(p185)
	(1) content영역 : 태그안, 내용을 작성하는 곳(텍스트, 또 다른 태그)
		- width속성과 height속성에 의해 크기조절이가능함
	(2) padding영역 : 내부여백(or 영역의 확장)
		- background만 표현됨
	(3) border영역 : 테두리
	(4) margin영역 : 외부여백(or 상대적 위치)
		- 상대적 위치로 해석이 가능한 이유 : 마이너스값을 사용할 수 있다
		- block레벨의 요소들은 margin영역은 다른 영역의 border영역을 경계기준으로 하여 여백이 설정된다.
		
■ CSS 우선순위	 : 스타일의 적용순서
	- 우선순위가 높다 = 최종적으로 적용되는 스타일을 뜻함
	(1) 작성방식 상관없이, 작성순서가 나중에 작성된 스타일이 우선순위가 높다.
	(2) 1번보다 대상을 구성하는 셀렉터의 수가 더 많은 쪽이 우선순위가 높다.
	(3) 태그셀렉터보다 클래스셀렉터가, 클래스셀렉터보다 아이디셀렉터가 우선순위가 더 높다.
	(4) 인라인스타일이 우선순위가 가장 높다.
	※ [!important]속성값:속성에 해당 속성값을 추가하면, 우선순위를 무시하고, 해당 속성의 스타일을 강제할 수 있다.

■ 진열방식에 따른 구분(★ 중요)
	1. block태그 : 사이트의 구조를 만들 때 사용
		- div, h1~h6, p, ul, ol, li, ld, dt, dd, hr, 
			header, main, footer, nav, aside, section, article, address, ...
		(1) 수직정렬
		(2) 기본크기 : 너비는 부모와 같고, 높이는 내용만큼 설정된다.
		(3) 크기조절이 가능하다.
 	
	2. inline태그 : 텍스트나 내용을 감싸는 태그 = 텍스트와 같은 취급
		- span, a, strong, em. i, (b, small, del, ins, sup, sub, mark)
		(1) 수평정렬
		(2) 기본크기 : 너비는 내용만큼, 높이는 글자크기(font-size)만큼 설정된다.
		(3) 크기조절이 불가능하다.
		(4) 공백(띄어쓰기)을 인식한다.
		(5) 블럭요소를 감쌀 수 없다.(블럭요소의 부모(조상)요소가 될 수 없다)
		(6) margin-top과 margin-bottom은 적용안됨
		(7) padding-top과 padding-bottom은 구조에 영향을 주지 않음.
		
	3. inline-block태그 : 내용에 해당되는 태그
		- img, iframe, video, audio
		(1) 수평정렬
		(2) 기본크기 : 너비, 높이 모두 내용만큼, 텍스트의 경우에는 행높이(line-height)만큼 설정된다.
		(3) 크기조절이 가능하다.
			
■ 블록요소를 수평하게 나열하는 방법
	1. display:inline;(inline-block;)
		[유의사항과 특징]
		(1) 크기조절이 안됨(inline만 해당)
		(2) 공백인식(띄어쓰기)
		(3) 가운데정렬 가능(text-align:center;)
	
	2. float:left;(or right;) - p222
		[유의사항과 특징]
		(1) 가운데정렬 불가능
		(2) 줄바꿈 : clear 속성을 사용하여, 줄바꿈
		(3) block요소가 float 적용된 요소들을 인식하지 못함 - ★★★
			[float요소를 인식하는 방법]
			case 1) float요소 다음에 block요소가 오는 경우
				:clear속성을 사용하여, 선행되는 float효과를 지운다.
			case 2) float요소를 감싸는 부모요소의 경우
				ⓐ 부모요소에게도 float를 설정한다.(추천하지 않음)
				ⓑ 필요한 만큼의 높이값을 강제적으로 부여한다.(하수, 유동적이지 않음)
				ⓒ overflow:hidden;을 설정한다. -!높이를 고정하면 안됨!
				ⓓ float를 인식하는 마지막 자식요소(block)를 추가한다.
				.clearfix::after{content:""; display:block; clear:both;}
			※ clear:both;(left; right;)
				:선행되는 float효과를 지운다.
				(이전 요소와 같이 수평정렬이 되지않음 - 줄바꿈)
				
■ 리셋코드
	:태그는 각자의 스타일을 기본값으로 가지고 있다.
	이를, 스타일링을 편하게 하기위해, 기본값은 0 또는 none으로 설정하거나, 
	자주사용되는 공통된 값으로 설정하는 것을 말함.
	-'에릭마이어'가 고안을 함
	- 에릭마이어의 사이트 : http://meyerweb.com/
	- 리셋코드 오픈소스 다운받기
		[Toolbox]-[CSS]-[Reset CSS]-[a copy of the file]
		
■ 각도의 단위
	(1) deg : 육십분법(360deg=1회전) ★
	(2) drad : 그레이드법(400grad = 1회전)
	(3) rad : 호도법(2π rad = 1회전)
	(4) turn : 회전(1turn = 1회전)